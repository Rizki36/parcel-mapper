// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  COURIER
  BRANCH_ADMIN
}

model User {
  id             String        @id @default(uuid())
  name           String?
  email          String        @unique
  password       String
  role           Role          @default(COURIER)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  courier        Courier?      @relation(fields: [courierId], references: [id])
  branchAdmin    BranchAdmin?  @relation(fields: [branchAdminId], references: [id])
  centralAdmin   CentralAdmin? @relation(fields: [centralAdminId], references: [id])
  courierId      String?       @unique
  branchAdminId  String?       @unique
  centralAdminId String?       @unique
}

model Branch {
  id          String        @id @default(uuid())
  name        String
  branchCode  String
  longitude   Float
  latitude    Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  area        Area[]
  courier     Courier[]
  branchAdmin BranchAdmin[]
  Parcel      Parcel[]
}

model Area {
  id        String  @id @default(uuid())
  longitude Float
  latitude  Float
  branchId  String?
  branch    Branch? @relation(fields: [branchId], references: [id])
}

model Courier {
  id        String   @id @default(uuid())
  name      String
  userId    String?  @unique
  branchId  String?
  user      User?
  branch    Branch?  @relation(fields: [branchId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  parcel    Parcel[]
}

model BranchAdmin {
  id        String   @id @default(uuid())
  name      String
  userId    String?  @unique
  branchId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?
  branch    Branch?  @relation(fields: [branchId], references: [id])
}

model CentralAdmin {
  id        String   @id @default(uuid())
  userId    String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?
}

model Parcel {
  id               String       @id @default(uuid())
  recipientName    String
  recipientAddress String?
  status           ParcelStatus @default(PENDING)
  longitude        Float
  latitude         Float
  courierId        String?
  branchId         String?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  courier          Courier?     @relation(fields: [courierId], references: [id])
  branch           Branch?      @relation(fields: [branchId], references: [id])
}

enum ParcelStatus {
  PENDING
  ON_THE_WAY
  DELIVERED
}
